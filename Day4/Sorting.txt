| Algorithm                       | Best Case  | Average Case | Worst Case                      | Space Complexity    | Stable? |
| ------------------------------- | ---------- | ------------ | ------------------------------- | ------------------- | ------- |
| **Bubble Sort**                 | O(n)       | O(n²)        | O(n²)                           | O(1)                | ✅ Yes   |
| **Insertion Sort**              | O(n)       | O(n²)        | O(n²)                           | O(1)                | ✅ Yes   |
| **Selection Sort**              | O(n²)      | O(n²)        | O(n²)                           | O(1)                | ❌ No    |
| **Merge Sort**                  | O(n log n) | O(n log n)   | O(n log n)                      | O(n)                | ✅ Yes   |
| **Quick Sort**                  | O(n log n) | O(n log n)   | O(n²) *(worst pivot)*           | O(log n) (in-place) | ❌ No    |
| **Heap Sort**                   | O(n log n) | O(n log n)   | O(n log n)                      | O(1)                | ❌ No    |
| **Counting Sort**               | O(n + k)   | O(n + k)     | O(n + k)                        | O(k)                | ✅ Yes   |
| **Radix Sort**                  | O(nk)      | O(nk)        | O(nk)                           | O(n + k)            | ✅ Yes   |
| **Bucket Sort**                 | O(n + k)   | O(n + k)     | O(n²) *(if poorly distributed)* | O(n)                | ✅ Yes   |
| **Tim Sort** *(used in Python)* | O(n)       | O(n log n)   | O(n log n)                      | O(n)                | ✅ Yes   |

Trick to learn Unstable Sorting Algorithms

Heap Quick Selection : Head Quarter S